<!doctype html>
<html lang="id">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Admin Panel â€” SimpleStock</title>
  <link rel="stylesheet" href="/style.css" />
</head>
<body>
  <header class="site-header">
    <h1>Admin Panel</h1>
    <div>
      <a class="admin-link" href="/">Ke Toko</a>
      <button id="logoutBtn" class="small danger" style="margin-left:12px">Logout</button>
    </div>
  </header>

  <main class="wrap">
    <div class="admin-grid">
      <section class="card left">
        <h2>Tambah Produk</h2>
        <form id="addForm">
          <input id="add-name" placeholder="Nama produk" required />
          <input id="add-price" type="number" placeholder="Harga" required />
          <input id="add-stock" type="number" placeholder="Stok" required />
          <input id="add-wa" placeholder="Nomor WhatsApp (contoh: 62812...)" />
          <textarea id="add-desc" placeholder="Deskripsi (sedikit)"></textarea>
          <div style="display:flex;gap:8px;align-items:center">
            <button type="submit">Tambah Produk</button>
            <span class="muted">Form panjang â€” scroll bila perlu</span>
          </div>
        </form>

        <hr />

        <h3>Tambah Admin (plaintext disimpan)</h3>
        <form id="addUserForm">
          <input id="new-user" placeholder="Username baru" required />
          <input id="new-pass" placeholder="Password baru" required />
          <button type="submit">Tambah Admin</button>
          <p id="addUserMsg" class="muted"></p>
        </form>
      </section>

      <section class="card right">
        <h2>Daftar Produk (Live)</h2>
        <div id="list-wrap" class="news-list admin-list"></div>
      </section>
    </div>
  </main>

  <script>
    const tokenKey = 'admin_token';
    function getToken(){ return localStorage.getItem(tokenKey); }
    function setToken(t){ localStorage.setItem(tokenKey, t); }
    function clearToken(){ localStorage.removeItem(tokenKey); }

    document.getElementById('logoutBtn').addEventListener('click', () => { clearToken(); location.href = '/admin-login.html'; });

    // AUTH CHECK
    async function authCheck() {
      const t = getToken();
      if (!t) return location.href = '/admin-login.html';
      // validate by checking users list (basic)
      try {
        const res = await fetch('/api/users', { headers: {'Authorization': 'Bearer ' + t }});
        if (res.status !== 200) { clearToken(); return location.href = '/admin-login.html'; }
      } catch (e) { clearToken(); location.href = '/admin-login.html'; }
    }

    // Load list
    async function loadList() {
      const r = await fetch('/api/stok');
      const arr = await r.json();
      const wrap = document.getElementById('list-wrap');
      wrap.innerHTML = '';
      if (!arr.length) { wrap.innerHTML = '<p class="muted">Belum ada produk.</p>'; return; }
      arr.forEach(p => {
        const el = document.createElement('div');
        el.className = 'news-card admin-card';
        el.innerHTML = `
          <h3>${escapeHtml(p.nama)}</h3>
          <p class="news-meta">Rp${numberWithCommas(p.harga)} â€¢ Stok: <strong id="stock-${p.id}">${p.stock ?? 0}</strong></p>
          <p class="news-desc">${escapeHtml(p.deskripsi || '')}</p>
          <p class="news-wa">ðŸ“² <a href="https://wa.me/${encodeURIComponent(p.wa || '')}" target="_blank">Chat</a></p>
          <div class="row" style="margin-top:8px">
            <button class="small" data-id="${p.id}" data-action="dec">-</button>
            <button class="small" data-id="${p.id}" data-action="inc">+</button>
            <button class="small danger" data-id="${p.id}" data-action="del">Hapus</button>
          </div>
        `;
        wrap.appendChild(el);
      });

      // attach handlers
      wrap.querySelectorAll('button').forEach(btn => {
        btn.addEventListener('click', async () => {
          const id = Number(btn.dataset.id);
          const act = btn.dataset.action;
          if (act === 'del') {
            if (!confirm('Hapus produk?')) return;
            await doRemove(id);
          } else {
            await doEdit(id, act === 'inc' ? 1 : -1);
          }
          loadList();
        });
      });
    }

    // Add product
    document.getElementById('addForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const nama = document.getElementById('add-name').value.trim();
      const harga = Number(document.getElementById('add-price').value);
      const stock = Number(document.getElementById('add-stock').value);
      const wa = document.getElementById('add-wa').value.trim();
      const deskripsi = document.getElementById('add-desc').value.trim();

      const res = await fetch('/api/stok', {
        method: 'POST',
        headers: {'Content-Type':'application/json','Authorization':'Bearer '+getToken()},
        body: JSON.stringify({ nama, harga, stock, wa, deskripsi })
      });
      if (res.ok) {
        document.getElementById('addForm').reset();
        loadList();
      } else {
        alert((await res.json()).message || 'Gagal menambah');
      }
    });

    // Add admin user (plaintext)
    document.getElementById('addUserForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const user = document.getElementById('new-user').value.trim();
      const pass = document.getElementById('new-pass').value;
      const res = await fetch('/api/users', {
        method: 'POST',
        headers: {'Content-Type':'application/json','Authorization':'Bearer '+getToken()},
        body: JSON.stringify({ user, pass })
      });
      const j = await res.json();
      document.getElementById('addUserMsg').innerText = j.message || (res.ok ? 'OK' : 'Gagal');
      if (res.ok) { document.getElementById('addUserForm').reset(); }
    });

    async function doEdit(id, delta) {
      const res = await fetch('/api/stok', {
        method: 'PUT',
        headers: {'Content-Type':'application/json','Authorization':'Bearer '+getToken()},
        body: JSON.stringify({ id, delta })
      });
      return res;
    }
    async function doRemove(id) {
      const res = await fetch('/api/stok', {
        method: 'DELETE',
        headers: {'Content-Type':'application/json','Authorization':'Bearer '+getToken()},
        body: JSON.stringify({ id })
      });
      return res;
    }

    // small helpers
    function escapeHtml(s){ if(!s) return ''; return s.replace(/[&<>"']/g, c=>({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[c])); }
    function numberWithCommas(x){ return String(x).replace(/\B(?=(\d{3})+(?!\d))/g, "."); }

    // init
    (async ()=>{ await authCheck(); await loadList(); })();
  </script>
</body>
</html>
